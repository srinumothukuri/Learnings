"use strict";var directiveModule=angular.module("angularjs-dropdown-multiselect",[]);directiveModule.directive("ngDropdownMultiselect",["$filter","$document","$compile","$parse",function(c,d,a,b){return{restrict:"AE",scope:{selectedModel:"=",options:"=",extraSettings:"=",events:"=",searchFilter:"=?",translationTexts:"=",groupBy:"@"},template:function(g,f){var i=f.checkboxes?true:false;var e=f.groupBy?true:false;var h='<div class="multiselect-parent btn-group dropdown-multiselect">';h+='<button type="button" class="dropdown-toggle" ng-class="settings.buttonClasses" ng-click="toggleDropdown()">{{getButtonText()}}&nbsp;<span class="caret"></span></button>';h+="<ul class=\"dropdown-menu dropdown-menu-form\" ng-style=\"{display: open ? 'block' : 'none', height : settings.scrollable ? settings.scrollableHeight : 'auto' }\" style=\"overflow: scroll\" >";h+='<li ng-hide="!settings.showCheckAll || settings.selectionLimit > 0"><a data-ng-click="selectAll()"><span class="glyphicon glyphicon-ok"></span>  {{texts.checkAll}}</a>';h+='<li ng-show="settings.showUncheckAll"><a data-ng-click="deselectAll();"><span class="glyphicon glyphicon-remove"></span>   {{texts.uncheckAll}}</a></li>';h+='<li ng-hide="(!settings.showCheckAll || settings.selectionLimit > 0) && !settings.showUncheckAll" class="divider"></li>';h+='<li ng-show="settings.enableSearch"><div class="dropdown-header"><input type="text" class="form-control" style="width: 100%;" ng-model="searchFilter" placeholder="{{texts.searchPlaceholder}}" /></li>';h+='<li ng-show="settings.enableSearch" class="divider"></li>';if(e){h+='<li ng-repeat-start="option in orderedItems | filter: searchFilter" ng-show="getPropertyForObject(option, settings.groupBy) !== getPropertyForObject(orderedItems[$index - 1], settings.groupBy)" role="presentation" class="dropdown-header">{{ getGroupTitle(getPropertyForObject(option, settings.groupBy)) }}</li>';h+='<li ng-repeat-end role="presentation">'}else{h+='<li role="presentation" ng-repeat="option in options | filter: searchFilter">'}h+='<a role="menuitem" tabindex="-1" ng-click="setSelectedItem(getPropertyForObject(option,settings.idProp))">';if(i){h+='<div class="checkbox"><label><input class="checkboxInput" type="checkbox" ng-click="checkboxClick($event, getPropertyForObject(option,settings.idProp))" ng-checked="isChecked(getPropertyForObject(option,settings.idProp))" /> {{getPropertyForObject(option, settings.displayProp)}}</label></div></a>'}else{h+="<span data-ng-class=\"{'glyphicon glyphicon-ok': isChecked(getPropertyForObject(option,settings.idProp))}\"></span> {{getPropertyForObject(option, settings.displayProp)}}</a>"}h+="</li>";h+='<li class="divider" ng-show="settings.selectionLimit > 1"></li>';h+='<li role="presentation" ng-show="settings.selectionLimit > 1"><a role="menuitem">{{selectedModel.length}} {{texts.selectionOf}} {{settings.selectionLimit}} {{texts.selectionCount}}</a></li>';h+="</ul>";h+="</div>";g.html(h)},link:function(h,f,e){var i=f.children()[0];h.toggleDropdown=function(){h.open=!h.open};h.checkboxClick=function(k,l){h.setSelectedItem(l);k.stopImmediatePropagation()};h.externalEvents={onItemSelect:angular.noop,onItemDeselect:angular.noop,onSelectAll:angular.noop,onDeselectAll:angular.noop,onInitDone:angular.noop,onMaxSelectionReached:angular.noop};h.settings={dynamicTitle:true,scrollable:false,scrollableHeight:"300px",closeOnBlur:true,displayProp:"label",idProp:"id",externalIdProp:"id",enableSearch:false,selectionLimit:0,showCheckAll:true,showUncheckAll:true,closeOnSelect:false,buttonClasses:"btn btn-default",closeOnDeselect:false,groupBy:e.groupBy||undefined,groupByTextProvider:null,smartButtonMaxItems:0,smartButtonTextConverter:angular.noop};h.texts={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"checked",selectionOf:"/",searchPlaceholder:"Search...",buttonDefaultText:"Select",dynamicButtonTextSuffix:"checked"};h.searchFilter=h.searchFilter||"";if(angular.isDefined(h.settings.groupBy)){h.$watch("options",function(k){if(angular.isDefined(k)){h.orderedItems=c("orderBy")(k,h.settings.groupBy)}})}angular.extend(h.settings,h.extraSettings||[]);angular.extend(h.externalEvents,h.events||[]);angular.extend(h.texts,h.translationTexts);h.singleSelection=h.settings.selectionLimit===1;function g(l){var k={};if(h.settings.externalIdProp===""){k[h.settings.idProp]=l}else{k[h.settings.externalIdProp]=l}return k}function j(k){for(var l in k){delete k[l]}}if(h.singleSelection){if(angular.isArray(h.selectedModel)&&h.selectedModel.length===0){j(h.selectedModel)}}if(h.settings.closeOnBlur){d.on("click",function(m){var l=m.target.parentElement;var k=false;while(angular.isDefined(l)&&l!==null&&!k){if(_.contains(l.className.split(" "),"multiselect-parent")&&!k){if(l===i){k=true}}l=l.parentElement}if(!k){h.$apply(function(){h.open=false})}})}h.getGroupTitle=function(k){if(h.settings.groupByTextProvider!==null){return h.settings.groupByTextProvider(k)}return k};h.getButtonText=function(){if(h.settings.dynamicTitle&&(h.selectedModel.length>0||(angular.isObject(h.selectedModel)&&_.keys(h.selectedModel).length>0))){if(h.settings.smartButtonMaxItems>0){var k=[];angular.forEach(h.options,function(n){if(h.isChecked(h.getPropertyForObject(n,h.settings.idProp))){var m=h.getPropertyForObject(n,h.settings.displayProp);var o=h.settings.smartButtonTextConverter(m,n);k.push(o?o:m)}});if(h.selectedModel.length>h.settings.smartButtonMaxItems){k=k.slice(0,h.settings.smartButtonMaxItems);k.push("...")}return k.join(", ")}else{var l;if(h.singleSelection){l=(h.selectedModel!==null&&angular.isDefined(h.selectedModel[h.settings.idProp]))?1:0}else{l=angular.isDefined(h.selectedModel)?h.selectedModel.length:0}if(l===0){return h.texts.buttonDefaultText}else{return l+" "+h.texts.dynamicButtonTextSuffix}}}else{return h.texts.buttonDefaultText}};h.getPropertyForObject=function(k,l){if(angular.isDefined(k)&&k.hasOwnProperty(l)){return k[l]}return""};h.selectAll=function(){h.deselectAll(false);h.externalEvents.onSelectAll();angular.forEach(h.options,function(k){h.setSelectedItem(k[h.settings.idProp],true)})};h.deselectAll=function(k){k=k||true;if(k){h.externalEvents.onDeselectAll()}if(h.singleSelection){j(h.selectedModel)}else{h.selectedModel.splice(0,h.selectedModel.length)}};h.setSelectedItem=function(o,k){var n=g(o);var l=null;if(h.settings.externalIdProp===""){l=_.find(h.options,n)}else{l=n}if(h.singleSelection){j(h.selectedModel);angular.extend(h.selectedModel,l);h.externalEvents.onItemSelect(l);if(h.settings.closeOnSelect){h.open=false}return}k=k||false;var m=_.findIndex(h.selectedModel,n)!==-1;if(!k&&m){h.selectedModel.splice(_.findIndex(h.selectedModel,n),1);h.externalEvents.onItemDeselect(n)}else{if(!m&&(h.settings.selectionLimit===0||h.selectedModel.length<h.settings.selectionLimit)){h.selectedModel.push(l);h.externalEvents.onItemSelect(l)}}if(h.settings.closeOnSelect){h.open=false}};h.isChecked=function(k){if(h.singleSelection){return h.selectedModel!==null&&angular.isDefined(h.selectedModel[h.settings.idProp])&&h.selectedModel[h.settings.idProp]===g(k)[h.settings.idProp]}return _.findIndex(h.selectedModel,g(k))!==-1};h.externalEvents.onInitDone()}}}]);